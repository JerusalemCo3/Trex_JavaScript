var PLAY = 1;
var END = 0;
var gameState = PLAY;

var trex, trex_running, choque, trex_collided;
var ground, invisibleGround, groundImage;

var cloudsGroup, cloudImage;
var obstaclesGroup, obstacle1, obstacle2, obstacle3, obstacle4, obstacle5, obstacle6;

var score=0;

var gameOver, restart;

function preload(){
  //cargar las imagenes al juego, el dino esta corriendo
  trex_running=loadAnimation("trex1.png","trex3.png","trex4.png"); //para animacion
  trex_collided=loadAnimation("trex_collided.png");
  groundImage=loadImage("ground2.png"); //para estatica, es el suelo xd
  cloudImage=loadImage("cloud.png"); //para las nubes

  obstacle1=loadImage("obstacle1.png") ;
  obstacle2=loadImage("obstacle2.png") ;
  obstacle3=loadImage("obstacle3.png") ;
  obstacle4=loadImage("obstacle4.png") ;
  obstacle5=loadImage("obstacle5.png") ;
  obstacle6=loadImage("obstacle6.png") ;

  gameOverImage=loadImage("gameOver.png");
  restartImage=loadImage("restart.png");
}


function setup() {
  // solo se ejecutan una vez
  createCanvas(600,200);
  trex=createSprite(50,180,20,50);
  trex.addAnimation("running",trex_running);
  trex.scale=0.5; //en escala

  ground=createSprite(200,180,400,20);
  ground.addImage("ground",groundImage);
  ground.X=ground.width/2;
  ground.velocityX=-6;

//Invisible suelo
  invisibleGround=createSprite(200,190,400,20);
  invisibleGround.visible=false;
  
  gameOver=createSprite(width/2, height/2);
  gameOver.addImage(gameOverImage);
  gameOver.scale=0.7;

  restart=createSprite(width/2, 150);
  restart.addImage(restartImage);
  restart.scale=0.7;

  gameOver.visible=false;
  restart.visible=false;

  cloudsGroup= new Group();
  obstaclesGroup= new Group();

}

//toda la funcion logic del programa. 
function draw() {
  background(205);
  text("Score:" + score ,500,50);
  if(gameState===PLAY){
    score=score+Math.round(getFrameRate()/50); //contador para el dinosaurio (score).
   ground.velocityX=-6;  //para que se mueva el suelo 
    if(ground.x<0) 
     ground.x=ground.width/2;
   if(keyDown("space")&& trex.y<=160)
     trex.velocityY=-10;
     trex.velocityY=trex.velocityY+0.8;
     trex.collide(invisibleGround);
     spawnClouds();
     spawnObstacles();
  
  if(obstaclesGroup.isTouching(trex)){
    gameState=END;
   }
}
  else if (gameState===END){
    gameOver.visible=true;
    restart.visible=true;
    ground.velocityX=0;
    trex.velocityY=0;
    obstaclesGroup.setVelocityXEach(0);
    cloudsGroup.setVelocityXEach(0);

    trex.changeAnimation("collided",choque);

    obstaclesGroup.setLifetimeEach(-1);
    cloudsGroup.setLifetimeEach(-1);

    if(mousePressedOver(restart)){
      reset();

    }

  }
  drawSprites();
}


//funcion de las nubes.
function spawnClouds(){
  if (frameCount %60 === 0) {
    var cloud = createSprite(600,120,40,10);
    cloud.y=Math.round(random(80,120));
    cloud.addImage("cloud",cloudImage);
    cloud.scale=0.5; //en escala
    cloud.velocityX=-3; //velocidad

    cloud.lifetime=205; //desaparescan en cierto tiempo
    cloud.depth=trex.depth;//mandar atras las nubes del trex rex
    trex.depth=trex.depth+1;//mandar al trex rex enfrente de la nube
  }
}


//funcion de los obstaculos
function spawnObstacles(){
  if (frameCount %60 === 0) {
    var obstacle= createSprite(600, 165 ,10,40);
    obstacle.velocityX=-7;
    var ran=Math.round(random(1,6));
    switch(ran){
      case 1: obstacle.addImage(obstacle1); 
      break;
      case 2: obstacle.addImage(obstacle2); 
      break;
      case 3: obstacle.addImage(obstacle3); 
      break;
      case 4: obstacle.addImage(obstacle4); 
      break;
      case 5: obstacle.addImage(obstacle5); 
      break;
      case 6: obstacle.addImage(obstacle6); 
      break;
      default: break;
  }
    obstacle.scale=0.5;
    obstacle.lifetime=200;
    obstaclesGroup.add(obstacle);
  }
}

//al  eliminar 
function reset(){
  gameState=PLAY;
  gameOver.visible=false;
  restart.visible=false;

  obstaclesGroup.destroyEach();
  cloudsGroup.destroyEach();
  trex.changeAnimation("running",trex_running);

  score=0;
}
